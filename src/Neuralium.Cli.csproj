<Project Sdk="Microsoft.NET.Sdk">
    <PropertyGroup>
        <TargetLatestRuntimePatch>true</TargetLatestRuntimePatch>
        <PlatformTarget>AnyCPU</PlatformTarget>
        <OutputType>Exe</OutputType>
        <GenerateAssemblyInfo>false</GenerateAssemblyInfo>
        <TargetFramework>netcoreapp3.0</TargetFramework>
        <LangVersion>latest</LangVersion>
        <RootNamespace>Neuralium.Cli</RootNamespace>
        <AssemblyName>Neuralium.Cli</AssemblyName>
        <Deterministic>false</Deterministic>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
        <DebugType>full</DebugType>
    </PropertyGroup>

  <ItemGroup>
    <FrameworkReference Include="Microsoft.AspNetCore.App" />
  </ItemGroup>
    <ItemGroup>

    <PackageReference Include="Neuralia.Blockchains.Tools" Version="1.0.0" />
    <PackageReference Include="Neuralia.BouncyCastle" Version="1.0.0" />
    <PackageReference Include="Neuralia.STUN" Version="1.0.0" />
    <PackageReference Include="Neuralia.Data.HashFunction.xxHash" Version="1.0.0" />

               <PackageReference Include="CommandLineParser" Version="2.6.0" />
        <PackageReference Include="Microsoft.AspNetCore.SignalR.Client" Version="3.0.0" />
        <PackageReference Include="morelinq" Version="3.2.0" />
        <PackageReference Include="Serilog.Enrichers.Thread" Version="3.1.0" />
        <PackageReference Include="Serilog.Exceptions" Version="5.3.1" />
        <PackageReference Include="Serilog.Extensions.Hosting" Version="3.0.0" />
        <PackageReference Include="Serilog.Settings.AppSettings" Version="2.2.2" />
        <PackageReference Include="Serilog.Settings.Configuration" Version="3.1.0" />
        <PackageReference Include="Serilog.Sinks.Async" Version="1.4.0" />
        <PackageReference Include="Serilog.Sinks.Console" Version="3.1.1" />
        <PackageReference Include="Serilog.Sinks.File" Version="4.0.0" />
    </ItemGroup>

    <ItemGroup>
        <None Update="config.json">
            <CopyToOutputDirectory>Always</CopyToOutputDirectory>
        </None>
    </ItemGroup>

    <Target Name="CopyCustomContent2" AfterTargets="AfterBuild">
        <Copy SourceFiles="config.json" DestinationFolder="$(OutputPath)" />
    </Target>
    <PropertyGroup Condition="'$(SolutionDir)' == '' or&#xA;                     '$(SolutionDir)' == '*undefined*'">
    <SolutionDir>..\</SolutionDir>
  </PropertyGroup>
  <Import Project="$(SolutionDir)CommonSettings.targets" />
</Project>
